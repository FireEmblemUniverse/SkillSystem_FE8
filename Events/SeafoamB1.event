#define ChapterID SeafoamB1Ch
#define GenericA UnitSeafoamWild
#define GenericB UnitSeafoamTrainer
#define ClassA ClassSeafoamWildA
#define ClassB ClassSeafoamWildB
#define WildLvl 38
#define TrainerL 38




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnitsA, 2, 4) 
Reinforce(0xF1, 1, ReinforcementUnitsB, 3, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN


BlaineEvent:
EVBIT_MODIFY 4 
ASMC PauseFreeMovementASMC
ENUT HideUnitIconsFlag
CAM1 [13,4]
CURSOR_FLASHING GymLeader 
STAL 40 
CURE
MOVE 3 GymLeader [13,6]
UNCR(GymLeader, 1<<24)
ENUN
SVAL s1 GymLeader 
SVAL s3 2 // down
ASMC SetUnitFacingASMC
Text(BlaineSeafoamText)
FADI 8 
DISA GymLeader 
ENUF HideUnitIconsFlag
FADU 8 
NoFade 
ENDA 

LocationBasedEvents:
House(0, ToRoute20E, 6, 22)
House(0, ToRoute20W, 32, 22)
House(0, ToSeafoamB2W, 6,5)
House(0, ToSeafoamB2E, 31,4)
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToSeafoamB2MidHole [21,8][21,8] 
AREA 0 ToSeafoamB2EHole [30,8][30,8] 
AREA 0 DropBoulderInWestHoleEvent [19,8][23,10] 
AREA 0 DropBoulderInEastHoleEvent [28,6][32,10] 
AREA BlaineSeafoamFlag BlaineEvent [12,7][14,8] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(6,22) 
EscapeTileEntry(32,22) 
EscapeTileEntry(6,5) 
EscapeTileEntry(31,4) 
EscapeTileTerminator ; } 
#endif 

ToRoute20E:
ENUF VR_BoulderInHoleFlag
ChapterTransition(Route20ECh, 10, 9)

ToRoute20W:
ENUF VR_BoulderInHoleFlag
ChapterTransition(Route20WCh, 53, 15)

ToSeafoamB2W:
ChapterTransition(SeafoamB2Ch, 9,7)

ToSeafoamB2E:
ChapterTransition(SeafoamB2Ch, 31,5)

ToSeafoamB2MidHole:
CALL FallInHoleEffect
ForcedChapterTransitionHole(SeafoamB2Ch, 22,6)
ToSeafoamB2EHole:
CALL FallInHoleEffect
ForcedChapterTransitionHole(SeafoamB2Ch, 29,6)

// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(54, 12,ChapterID*2,1080)
//CoinsTrap(57,15,(ChapterID*2)+1,600)
// RaftTrap(13, 4)
RaftTrap(13, 5)

//CutBush(12,10)
//RockSmash(29,9)

//RockSmash(8, 13)
//RockSmash(9, 13)
StrengthBoulder(17, 8)
StrengthBoulder(31,12)
//RockSmash(24,16)
//RockSmash(25,16)



Hole(21,8) // boulders should come before holes, i think ? 
Hole(30,8) 


//StatAccessoryTrap(43, 13, (ChapterID*2), EnhancedWard_BoostIndex) 
//RedPokeballTrap(49,9, (ChapterID*2)+1, Zinc) 
RedPokeballTrap(23,9, (ChapterID*2), WaterStone) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

//SignBTrap(14, 8, ChapterID, 0x0) //no extra text 
//SignATrap(55,7, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
SpellScrollTrap(13, 7, (ChapterID*2)+1, Waterfall)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 



//Flower(18,10)


ENDTRAP
ALIGN 4



DropBoulderInWestHoleEvent: 
BoulderHoleEvent(21,8, B1_BoulderAFlag)
NoFade 
ENDA 

DropBoulderInEastHoleEvent: 
BoulderHoleEvent(30,8, B1_BoulderBFlag)
NoFade 
ENDA 


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 


CHECK_EVENTID B1_BoulderAFlag
BEQ 0 sC s0 // if on, do not spawn 
RemoveTrap(17,8)
LABEL 0 

CHECK_EVENTID B1_BoulderBFlag
BEQ 1 sC s0 // if on, do not spawn 
RemoveTrap(31,12)
LABEL 1 

LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(4,3, 34,21)) 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Sea, Range(0,0,5,5), Range(16,9,22,12)) 


AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  

CHECK_EVENTID StrengthBoulderFlag 
BEQ 27 sC s0 
CHECK_EVENTID BlaineSeafoamFlag 
BNE 27 sC s0 
LOAD1 1 BlaineUnitGroup 
ENUN 
UNCM(GymLeader, 1<<24) // Shake 
MarkTrainerAsDefeated(GymLeader) 
LABEL 27 

 // Bushes  
//LOAD1 0x1 HumanTrainers
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

BlaineUnitGroup:
UNIT GymLeader BlaineID 0x0 Level(LVFACEUP, Enemy, 1)   [13,4] 0	0x0 0x01 REDA13R4 [0x0,0x0,0x0,0x0] DoNothing
UNIT 

EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
//UNIT 0xF0 BurrowID 0x0 Level(0, Enemy, 1)   [34,2]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsB:
//UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
//UNIT 0xF1 SuspiciousWaterID 0x0 Level(0, Enemy, 1)   [0,4]  0b	0x0 0x01 REDA0R4  [0x0,0x0,0x0,0x0] BushAI
UNIT 


ReinforcementUnitsA:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 
ReinforcementUnitsB:
UNIT Reinforcement0 ClassB 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

 
	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID