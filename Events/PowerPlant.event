#define ChapterID PowerPlantCh
#define GenericA UnitVictoryRoadWild
#define GenericB UnitVictoryRoadTrainer
#define ClassA ClassPowerPlantWildA
#define ClassB ClassPowerPlantWildB
#define WildLvl 50
#define TrainerL 50




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnitsA, 2, 4) 
Reinforce(0xF1, 1, ReinforcementUnitsA, 3, 4) 
Reinforce(0xF2, 1, ReinforcementUnitsA, 3, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
CharacterEventBothWays(0x10,SurgeEvent, 0, GymLeader)
CharacterEventBothWays(0,SurgeEvent2, 0, GymLeader)
AllTrainersPostBattleTalk
END_MAIN

SurgeEvent:
EVBIT_MODIFY 4 
CAM1 [19,29]
ASMC PauseFreeMovementASMC
Text(SurgePowerPlantText)
EVBIT_F 9 // Do not follow - can be before or after MOVE 
MOVE 8 GymLeader [28,22]
ENUN
MOVE (-1) GymLeader [34,28] 
EVBIT_F 9 // Do not follow 
ENUN 
SVAL s1 GymLeader 
SVAL s3 3 // up
ASMC SetUnitFacingASMC
NoFade 
ENDA 

SurgeEvent2:
EVBIT_MODIFY 4 
ENUT SurgePowerPlantFlag
Text(SurgePowerPlantText2)
FADI 8 
DISA GymLeader 
FADU 8 
NoFade 
ENDA 

LocationBasedEvents:
House(0, ToRoute10W, 1,11) 
House(0, ToRoute10, 5,29) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
AFEV 0 ZapdosFledEvent 0 
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(1,11) 
EscapeTileEntry(5,29) 
EscapeTileTerminator ; } 
#endif 

ZapdosFledEvent: 
CHECK_EVENTID ZapdosFledFlag 
BNE 99 rC r0 

GetTargetID
SADD s2 sC s0 
SVAL s1 ZapdosID 
CHECK_CLASS 0x7ffd 
BEQ 0 sC s1 

CHECK_ACTIVE 
SADD s2 sC s0 
CHECK_CLASS 0x7ffd
BEQ 0 sC s1 
GOTO 99 

LABEL 0 // unit ID in s2 where class is Zapdos and Zapdos has never been defeated 

// Check if legendary is at low hp. If so, flee. 
// Proc skill for legendaries prevents them from getting KO'd 
GetUnitStatus(0x7ffd, CurrentHP) 
SADD sA sC s0 
GetUnitStatus(0x7ffd, MaxHP) 
SVAL s1 3 
SDIV s9 sC s1 
BGE 99 sA s9 // if over 1/3rd hp, do nothing  
ENUT ZapdosFledFlag // 1/3rd or less hp, so flee 
UnsetAllDangerRadius
VeslySetDangerRadius
CALL ModularSummonWildTrainerEvent // looks for unit ID of attacker or defender from 0xD0 - 0xDF, originally 0xE0 - 0xEF 


LABEL 99 
NoFade 
ENDA 


ToRoute10:
ChapterTransition(Route10Ch, 7,42)

ToRoute10W:
ChapterTransition(Route10Ch, 1,38)



// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:


// ThunderMove, VintageBoots, ThunderStone, Carbos 


//StrengthBoulder(4,3)
GenericDisappearCompletion(12, 28, 0, RedPokeballSMS, 7) // xx, yy, flag, sprite, effectID 
GenericDisappearCompletion(18, 28, 0, RedPokeballSMS, 8) // xx, yy, flag, sprite, effectID 
GenericDisappearCompletion(35, 28, 0, RedPokeballSMS, 9) // xx, yy, flag, sprite, effectID 
GenericDisappearCompletion(30, 23, 0, RedPokeballSMS, 10) // xx, yy, flag, sprite, effectID 
GenericDisappearCompletion(23,11, 0, RedPokeballSMS, 11) // xx, yy, flag, sprite, effectID 
GenericDisappearCompletion(18,17, 0, RedPokeballSMS, 12) // xx, yy, flag, sprite, effectID 

StatAccessoryTrap(22,16, (ChapterID*2), VintageBoots_BoostIndex) 
RedPokeballTrap(30,26, (ChapterID*2)+1, Carbos) 
RedPokeballTrap(14,27, (ChapterID*2), ThunderStone) 
//RedPokeballTrap(22,16, (ChapterID*2), ThunderStone) 
SpellScrollTrap(5,5, (ChapterID*2)+1, ThunderMove)

//RedPokeballTrap(34,7, (ChapterID*2), SuperPotion) 
//SkillAccessoryTrap(26,4, (ChapterID*2)+1, GaleforceID) 
//SkillAccessoryTrap(13,11, (ChapterID*2), BlossomID) 


//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

SignBTrap(4,8, ChapterID, 0x0) //no extra text 
SignATrap(3,24, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(6,18, ChapterID*2, RockyHelmetSkillID)
//SpellScrollTrap(6,18, (ChapterID*2), Megahorn)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(47,5) 
SaveCost(24,7)


//Flower(18,10)


ENDTRAP
ALIGN 4

GenericDisappearEffect(7, PowerPlantLeftVoltorb)
GenericDisappearEffect(8, PowerPlantRightVoltorb)
GenericDisappearEffect(10, PowerPlantLeftElectrode)
GenericDisappearEffect(9, PowerPlantRightElectrode)
GenericDisappearEffect(11, PowerPlantRightElectrode2)
GenericDisappearEffect(12, PowerPlantLeftElectrode2)

EndActionEvent: 
PauseFreeMovement
CHECK_COORDS 0x7FFf
SADD rB rC r0 
SET_CURSOR_SB
SET_ACTIVE 0 
NoFade 
ENDA 

PowerPlantLeftVoltorb:
ENUT AttackedThisTurnFlag
LOAD1 1 VoltorbLeftUnitGroup 
ENUN 
AutoLevelUnits(WildLvl, True, 0x9B9B) // Wilds 
// danger zone isn't updated properly like this fsr 
UnsetAllDangerRadius
VeslySetDangerRadius
NoFade 
ENDA 

PowerPlantRightVoltorb:
ENUT AttackedThisTurnFlag
LOAD1 1 VoltorbRightUnitGroup 
ENUN 
AutoLevelUnits(WildLvl, True, 0x9C9C) // Wilds 
UnsetAllDangerRadius
VeslySetDangerRadius
NoFade 
ENDA 


PowerPlantLeftElectrode:
ENUT AttackedThisTurnFlag
LOAD1 1 ElectrodeLeftUnitGroup 
ENUN 
AutoLevelUnits(WildLvl, True, 0x9E9E) // Wilds 
UnsetAllDangerRadius
VeslySetDangerRadius
NoFade 
ENDA 

PowerPlantRightElectrode:
ENUT AttackedThisTurnFlag
LOAD1 1 ElectrodeRightUnitGroup 
ENUN 
AutoLevelUnits(WildLvl, True, 0x9D9D) // Wilds 
UnsetAllDangerRadius
VeslySetDangerRadius
NoFade 
ENDA 

PowerPlantLeftElectrode2:
ENUT AttackedThisTurnFlag
LOAD1 1 ElectrodeLeftUnitGroup2
ENUN 
AutoLevelUnits(WildLvl, True, 0x9999) // Wilds 
UnsetAllDangerRadius
VeslySetDangerRadius
NoFade 
ENDA 

PowerPlantRightElectrode2:
ENUT AttackedThisTurnFlag
LOAD1 1 ElectrodeRightUnitGroup2
ENUN 
AutoLevelUnits(WildLvl, True, 0x9A9A) // Wilds 

UnsetAllDangerRadius
VeslySetDangerRadius
NoFade 
ENDA 

BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,3,3), Range(19,4,36,12)) 
LOAD1 0x1 EnemyUnitsB
ENUN 
RandomizeEnemyCoords(Ground, Range(0,0,3,3), Range(1,16,38,38)) 

LOAD1 0x1 EnemyBurrows
ENUN 
AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds 

CheckTrainerFlag(0xEE) // based on unit IDs 0xE0-0xEF per chapter 
BNE 10 rC r0 
LOAD1 0x1 ZapdosBattleUnitGroup 
ENUN 
GOTO 11 
LABEL 10 
ENUT ZapdosFledFlag
LABEL 11 


CHECK_EVENTID SurgePowerPlantFlag 
BNE 27 sC s0 
LOAD1 1 SurgeUnitGroup 
ENUN 
MarkTrainerAsDefeated(GymLeader) 
LABEL 27 



 
AutoLevelUnits(WildLvl, True, 0xE0EF) // Trainers 

CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

SurgeUnitGroup:
UNIT GymLeader LtSurgeID 0x0 Level(LVFACEUP, Enemy, 1)   [21,29] 0	0x0 0x01 REDA21R29 [0x0,0x0,0x0,0x0] DoNothing
UNIT 

EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

VoltorbLeftUnitGroup:
UNIT 0x9B VoltorbID 0x0 Level(0, Enemy, 1)   [12,28] 00b	0x0 0x01 REDA12R28 [0] AttackInRangeAI
UNIT 0x9B VoltorbID 0x0 Level(0, Enemy, 1)   [12,28] 00b	0x0 0x01 REDA13R28 [0] AttackInRangeAI
UNIT 0x9B VoltorbID 0x0 Level(0, Enemy, 1)   [12,28] 00b	0x0 0x01 REDA12R29 [0] AttackInRangeAI
UNIT 

VoltorbRightUnitGroup:
UNIT 0x9C VoltorbID 0x0 Level(0, Enemy, 1)   [18,28] 00b	0x0 0x01 REDA18R28 [Spark,Leer,0x0,0x0] AttackInRangeAI
UNIT 0x9C VoltorbID 0x0 Level(0, Enemy, 1)   [18,28] 00b	0x0 0x01 REDA19R28 [Spark,Leer,0x0,0x0] AttackInRangeAI
UNIT 0x9C VoltorbID 0x0 Level(0, Enemy, 1)   [18,28] 00b	0x0 0x01 REDA18R29 [Spark,Leer,0x0,0x0] AttackInRangeAI
UNIT 

ElectrodeRightUnitGroup:
UNIT 0x9D ElectrodeID 0x0 Level(0, Enemy, 1)   [35,28] 00b	0x0 0x01 REDA35R28 [0x0] AttackInRangeAI
UNIT 0x9D ElectrodeID 0x0 Level(0, Enemy, 1)   [35,28] 00b	0x0 0x01 REDA34R28 [0x0] AttackInRangeAI
UNIT 0x9D ElectrodeID 0x0 Level(0, Enemy, 1)   [35,28] 00b	0x0 0x01 REDA34R29 [0x0] AttackInRangeAI
UNIT 

ElectrodeLeftUnitGroup:
UNIT 0x9E ElectrodeID 0x0 Level(0, Enemy, 1)   [30,23] 00b	0x0 0x01 REDA30R23 [0x0] AttackInRangeAI
UNIT 0x9E ElectrodeID 0x0 Level(0, Enemy, 1)   [30,23] 00b	0x0 0x01 REDA30R22 [0x0] AttackInRangeAI
UNIT 0x9E ElectrodeID 0x0 Level(0, Enemy, 1)   [30,23] 00b	0x0 0x01 REDA31R23 [0x0] AttackInRangeAI
UNIT 


ElectrodeRightUnitGroup2:
UNIT 0x9A ElectrodeID 0x0 Level(0, Enemy, 1)   [23,11] 00b	0x0 0x01 REDA23R11 [Thunderbolt,Screech,Explosion,0x0] AttackInRangeAI
UNIT 0x9A ElectrodeID 0x0 Level(0, Enemy, 1)   [23,11] 00b	0x0 0x01 REDA23R12 [Thunderbolt,Screech,Explosion,0x0] AttackInRangeAI
UNIT 0x9A ElectrodeID 0x0 Level(0, Enemy, 1)   [23,11] 00b	0x0 0x01 REDA22R11 [Thunderbolt,Screech,Explosion,0x0] AttackInRangeAI
UNIT 

ElectrodeLeftUnitGroup2:
UNIT 0x99 ElectrodeID 0x0 Level(0, Enemy, 1)   [18,17] 00b	0x0 0x01 REDA18R17 [Thunderbolt,Screech,Explosion,0x0] AttackInRangeAI
UNIT 0x99 ElectrodeID 0x0 Level(0, Enemy, 1)   [18,17] 00b	0x0 0x01 REDA18R16 [Thunderbolt,Screech,Explosion,0x0] AttackInRangeAI
UNIT 0x99 ElectrodeID 0x0 Level(0, Enemy, 1)   [18,17] 00b	0x0 0x01 REDA17R17 [Thunderbolt,Screech,Explosion,0x0] AttackInRangeAI
UNIT 


EnemyBurrows:
UNIT 0xF0 BurrowID 0x0 Level(0, Enemy, 1)   [6,15]  0b	0x0 0x01 REDA6R15  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 BurrowID 0x0 Level(0, Enemy, 1)   [22,20]  0b	0x0 0x01 REDA22R20  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF2 BurrowID 0x0 Level(0, Enemy, 1)   [24,2]  0b	0x0 0x01 REDA24R2  [0x0,0x0,0x0,0x0] BushAI
UNIT 

ReinforcementUnitsA:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 



// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xEE, 0, 0, 0, 1, 1, 0, 1, ZapdosUnits) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xE, ZapdosChallengeText)
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xE, ZapdosDefeatText, 0) 
TDQ_TableTerminator ; }

ZapdosBattleUnitGroup:
UNIT 0xEE ZapdosID 0x0 Level(0, Enemy, 1) [6,11]  0b 0x0	0x1 REDA6R11 [Leer,ThunderMove,DrillPeck,0x0] TrainerAI  // Trainer has its 1st wep removed when summoning 
UNIT 

ZapdosUnits: 
UNIT GenericA 	RaichuID 		0xEE 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	JolteonID 		0xEE 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	ElectabuzzID 		0xEE 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	MagnetonID 		0xEE 	Level(0, Enemy, 1) [11,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	ElectrodeID 		0xEE 	Level(0, Enemy, 1) [11,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT





	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID