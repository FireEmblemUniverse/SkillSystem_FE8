#define ChapterID MtMoonB3Ch
#define GenericA UnitMtMoonWild
#define GenericB UnitMtMoonTrainer
#define ClassA ClassMtMoonB3WildA
#define ClassB ClassMtMoonB3WildB
#define WildLvl 11
#define TrainerL 15 





EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, BurrowReinforcementUnits, 6, 4) // West burrow 
Reinforce(0xF1, 1, BurrowReinforcementUnits, 7, 4) // Mid-W Burrow 
Reinforce(0xF2, 1, BurrowReinforcementUnits, 8, 4) // Mid-E Burrow 
Reinforce(0xF3, 1, BurrowReinforcementUnits, 9, 4) // East burrow 
}

CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
CharacterEventBothWays(0,BillEvent, 0, GymLeader)
AllTrainersPostBattleTalk
END_MAIN

BillEvent: 
ENUT BillMtMoonFlag 
EVBIT_MODIFY 4 
TEXTSTART 
TEXTSHOW BillMtMoonText
TEXTEND 
CHECK_EVENTID 0x10 
BEQ 99 sC s0 
TEXTSHOW BillMtMoonText2
TEXTEND 
REMA 
FADI 6 
DISA GymLeader 
FADU 6 
LABEL 99 
REMA 
NoFade 
ENDA 


LocationBasedEvents:


House(0, ToMtMoonB2_NE, 23,13) 
House(0, ToMtMoonB2_ME, 21,20) 
House(0, ToMtMoonB2_SW, 11,30) 
House(0, ToMtMoonB2_Exit, 5,9) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(23,13) 
EscapeTileEntry(21,20) 
EscapeTileEntry(11,30) 
EscapeTileEntry(5,9) 
EscapeTileTerminator ; } 
#endif 

ToMtMoonB2_ME:
ENUT SkipIntroFlag
ChapterTransition(MtMoonB2Ch, 22,22)

ToMtMoonB2_SW:
ENUT SkipIntroFlag
ChapterTransition(MtMoonB2Ch, 11, 30)

ToMtMoonB2_NE:
ENUT SkipIntroFlag
ChapterTransition(MtMoonB2Ch, 13, 14)

ToMtMoonB2_Exit:
ENUT SkipIntroFlag
ChapterTransition(MtMoonB2Ch, 20, 6)


GenericDisappearEffect(17, ObtainBillsRopeEvent)

ObtainBillsRopeEvent: 
ENUT 0x10
TutText(ObtainedBillsRopeText) 
NoFade 
ENDA 

// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(13,15,ChapterID*2,550)
//CoinsTrap(57,15,(ChapterID*2)+1,600)
GenericDisappearCompletion(28, 14, 0x10, RedPokeballSMS, 17) // xx, yy, flag, sprite, effectID 

//CutBush(4,2)
RockSmash(9,8)
RockSmash(13,9)
RockSmash(16,4)
//StrengthBoulder(4,3)
SignTrap(7,34, TrainerTip_MoveMapFaster)
//RedPokeballTrap(16,35, ChapterID*2, SuperPotion)
//StatAccessoryTrap(17,20, (ChapterID*2), BronzeShield_BoostIndex) 
//GoldPokeballTrap(14,13, (ChapterID*2)+1, Gust) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

StatAccessoryTrap(27,4, (ChapterID*2)+1, BronzeShield_BoostIndex)
SkillAccessoryTrap(17,15, ChapterID*2, RockyHelmetSkillID) 

SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

SpellScrollTrap(32,24, (ChapterID*2)+1, KarateChop)

SignBTrap(10,12, ChapterID, 0x0) //no extra text 
SignATrap(21,17, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

//SkillScrollTrap(42,16, ChapterID*2, PatienceID)
//SpellScrollTrap(18,9, (ChapterID*2)+1, DoubleHit)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 
HealTile(10,22) 


ENDTRAP
ALIGN 4




BeginningScene:
ENUF SkipIntroFlag
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 



LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(2,2,37,24)) //w patch 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(4,26,37,37)) //se patch 
LOAD1 0x1 EnemyUnitsC // burrows 
ENUN
AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Burrows 

LOAD1 0x1 BossUnit
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,5,5), Range(25,4,31,10)) //NE patch 
UnmarkTrainerAsDefeated(0xEE)

CHECK_EVENTID BillMtMoonFlag
BNE 27 sC s0 
LOAD1 1 BillUnitGroup 
ENUN 
MarkTrainerAsDefeated(GymLeader)
GOTO 28 
LABEL 27
RemoveTrapAtCoords(28,14)
LABEL 28  


LOAD1 0x1 HumanTrainers
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent

LABEL 0x63

//LOAD1 1 DebugUnit 
//ENUN 

NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

// Wilds
EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,2] 001b	0x0 0x01 REDA0R2 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,3] 001b	0x0 0x01 REDA0R3 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,2] 001b	0x0 0x01 REDA0R2 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT

EnemyUnitsC:
UNIT 0xF0 BurrowID 0x0 Level(0, Enemy, 1)   [27,28]  0b	0x0 0x01 REDA27R28  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 BurrowID 0x0 Level(0, Enemy, 1)   [15,19] 0b	0x0 0x01 REDA15R19 [0x0,0x0,0x0,0x0] BushAI
UNIT 

BurrowReinforcementUnits:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

DebugUnit:
UNIT GenericA ZubatID 0x0 Level(0, Enemy, 1)   [18,30] 0b	0x0 0x01 REDA18R30 [LeechLife,0x0,0x0,0x0] AttackInRangeAI
UNIT


BossUnit:
UNIT 0xEE ClefableID 0x0 Level(0, Enemy, 1) [0,0]  0b 0x0	0x1 REDA0R0 [0x0,0x0,0x0,0x0] TrainerAI  // Trainer has its 1st wep removed when summoning 
UNIT 

BossSummons: // 1st class must be >9 even if monsters because of Gary cutscenes using <9 to check for starters / cutscenes 
UNIT GenericA 	ClassA 		0xEE 	Level(0, Enemy, 1) [9,11]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericA 	ClassA 		0xEE 	Level(0, Enemy, 1) [11,11]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericA 	ClefairyID 0xEE 	Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
//UNIT GenericA 	ClassA 		0xEE 	Level(0, Enemy, 1) [9,9]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericA 	ClassA		0xEE 	Level(0, Enemy, 1) [11,9]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT



// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableEntry(0xE2, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers2) 
MS_TableEntry(0xE3, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers3) 
MS_TableEntry(0xE4, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers4) 
MS_TableEntry(0xE5, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers5) 
MS_TableEntry(0xE6, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers6) 
MS_TableEntry(0xEE, 0, 0, 0, 1, 1, 0, 1, BossSummons)  
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xE, 0x00)
SHORT MMB3_0xE0_BQ // 0xE0 
SHORT MMB3_0xE1_BQ // 0xE1
SHORT MMB3_0xE2_BQ // 0xE2 
SHORT MMB3_0xE3_BQ // 0xE3 
SHORT MMB3_0xE4_BQ // 0xE4 
SHORT MMB3_0xE5_BQ // 0xE5
SHORT MMB3_0xE6_BQ // 0xE5

TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xE, 0x00, 0)
SHORT MMB3_0xE0_BD // 0xE0 
SHORT 300 // Gold 
SHORT MMB3_0xE1_BD // 0xE1
SHORT 550 // Gold 
SHORT MMB3_0xE2_BD // 0xE2 
SHORT 200 // Gold 
SHORT MMB3_0xE3_BD // 0xE3 
SHORT 600 // Gold 
SHORT MMB3_0xE4_BD // 0xE4 
SHORT 375 // Gold 
SHORT MMB3_0xE5_BD // 0xE4 
SHORT 500 // Gold 
SHORT MMB3_0xE6_BD // 0xE4 
SHORT 500 // Gold 
TDQ_TableTerminator ; }

// all trainers with the same sprite will face the same direction! 
HumanTrainers:
UNIT 0xE0 rocket_mID 0x0 Level(0, Enemy, 1) [28,21]  0b 0x0	0x1 REDA28R21 [OneRangeWep,0x0,0x0,0x0] TrainerAI
//UNIT 0xE1 super_nerdID 0x0 Level(LVFACERIGHT, Enemy, 1) [31,29]  0b 0x0	0x1 REDA31R29 [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI
//UNIT 0xE2 rocket_mID 0x0 Level(0, Enemy, 1) [16,36]  0b 0x0	0x1 REDA16R36 [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE3 rocket_fID 0x0 Level(0, Enemy, 1) [5,32]  0b 0x0	0x1 REDA5R32 [OneRangeWep,0x0,0x0,0x0] TrainerAI //
UNIT 0xE4 super_nerdID 0x0 Level(LVFACERIGHT, Enemy, 1) [8,14]  0b 0x0 0x1 REDA8R14 [OneRangeWep,0x0,0x0,0x0] TrainerAI //
UNIT 0xE5 rocket_mID 0x0 Level(0, Enemy, 1) [11,2]  0b 0x0	0x1 REDA11R2 [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI // TrainerBossAI
UNIT 0xE6 rocket_fID 0x0 Level(0, Enemy, 1) [8,2]  0b 0x0	0x1 REDA8R2 [OneRangeWep,0x0,0x0,0x0] TrainerAI //
UNIT

BillUnitGroup:
UNIT GymLeader billID 0x0 Level(LVFACELEFT, Enemy, 1) [31,16]  0b 0x0	0x1 REDA31R16 [0,0x0,0x0,0x0] DoNothing
UNIT


// 9 / 16 - players + 4 unique objects + 3 unique trainers (BugCatcher, Lass, Camper) + weedle+caterpie 
// 7 / 16 - wild + trainer unique classes 
// Weedle, caterpie (not included in 7 count) 
// Sandshrew, Oddish, Spearow - wild mons 
// Rattata - reinforcement from burrows 
// jigglypuff trainer 
// vulpix, poliwag, oddish 

// B3 - Ekans, Koffing, sandshrew, rattata, clefairy, zubat

EnemyTrainers0: // Rocket
UNIT GenericB 	ZubatID 0xE0 	Level(0, Enemy, 1) [10,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	SandshrewID 0xE0 	Level(0, Enemy, 1) [11,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
//UNIT GenericB 	ZubatID 0xE0 	Level(0, Enemy, 1) [12,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: // Rocket
UNIT GenericB 	ZubatID 0xE1 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	ZubatID 0xE1 	Level(0, Enemy, 1) [11,10]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0]  SafestZoningGroupTwoAI
//UNIT GenericB 	ZubatID 0xE1 	Level(0, Enemy, 1) [10,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0]  SafestZoningGroupTwoAI
UNIT

EnemyTrainers2: // Rocket
UNIT GenericB  SandshrewID 0xE2 	Level(0, Enemy, 1) [ 8,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
//UNIT GenericB  ZubatID 0xE2 	Level(0, Enemy, 1) [ 9,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB  ZubatID 0xE2 	Level(0, Enemy, 1) [ 10,12]  0b 0x0	0x0 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT

EnemyTrainers3: // Rocket
UNIT GenericB  ZubatID 0xE3 	Level(0, Enemy, 1) [ 8,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
//UNIT GenericB  ZubatID 0xE3 	Level(0, Enemy, 1) [ 9,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
//UNIT GenericB  ZubatID 0xE3 	Level(0, Enemy, 1) [ 10,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB  ZubatID 0xE3 	Level(0, Enemy, 1) [ 11,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB  ZubatID 0xE3 	Level(0, Enemy, 1) [ 12,12]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT

EnemyTrainers4: // Nerd
UNIT GenericB  ClefairyID 0xE4 		Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB  ZubatID 0xE4 		Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT

EnemyTrainers5: // Rocket
UNIT GenericB  ZubatID 0xE5 		Level(0, Enemy, 1) [8,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT GenericB 	KoffingID 0xE5 	Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
//UNIT GenericB 	ZubatID 0xE5 	Level(0, Enemy, 1) [12,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSixAI
UNIT


EnemyTrainers6: // Rocket
UNIT GenericB 	ZubatID 0xE6 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT GenericB  EkansID 0xE6		Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
//UNIT GenericB 	ZubatID 0xE6 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupSevenAI
UNIT


	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID