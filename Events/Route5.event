#define ChapterID Route5Ch
#define GenericA UnitRoute5Wild
#define GenericB UnitRoute5Trainer
#define ClassA ClassRoute5WildA
#define ClassB ClassRoute5WildB
#define WildLvl 16
#define TrainerL 20




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnits, 3, 4) 
Reinforce(0xF1, 1, ReinforcementUnits, 5, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
CharacterEventBothWays(0,MistyEvent, 0, GymLeader)
AllTrainersPostBattleTalk
END_MAIN

MistyEvent: 
Text(MistyRoute5Text)
ENUT MistyRoute5Flag 
NoFade 
ENDA 

LocationBasedEvents:
House(0, DaycareHouse, 13,25) 
House(0, ToSaffron, 14,32) 
House(0, ToSaffron, 15,32) 
House(0, ToRoute6, 21,31) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToRoute9W [29,0] [30,0] 
AREA 0 ToCerulean [16,0] [16,0] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(16,0) 
EscapeTileEntry(29,0) 
EscapeTileEntry(21,31)
EscapeTileEntry(14,32)
EscapeTileEntry(15,32)
EscapeTileTerminator ; } 
#endif 



ToRoute9W:
ChapterTransition(Route9WCh, 2,21)

ToCerulean:
ChapterTransition(CeruleanCh, 19,30)

ToRoute6:
TutText(0x35,UndergroundPassText) // black bg 
ForcedChapterTransition(Route6Ch, 19,13)


ToSaffron:
CHECK_EVENTID SaffronArrived
BNE 0 sC s0 
CALL ClosedArea
LABEL 0 
ChapterTransition(SaffronCh, 17,4)


DaycareHouse:
TutText(DaycareHouseText)
NoFade 
ENDA 

// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(29,18,ChapterID*2,450)
//CoinsTrap(57,15,(ChapterID*2)+1,600)

CutBush(16,0)



RockSmash(12,3)
RockSmash(15,3)
// RockSmash(17,22)
//StrengthBoulder(4,3)

//RedPokeballTrap(16,35, ChapterID*2, SuperPotion)
//StatAccessoryTrap(17,20, (ChapterID*2), BronzeShield_BoostIndex) 
//GoldPokeballTrap(14,13, (ChapterID*2)+1, Gust) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(17,15, ChapterID*2, RockyHelmetSkillID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

SkillScrollTrap(16,24, (ChapterID*2)+1, PerfectionistID) 

SignBTrap(20,32, ChapterID, 0x0) //no extra text 
SignATrap(22,0, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



BerryTree(4,1,5)

//SkillScrollTrap(42,16, ChapterID*2, PatienceID)
//SpellScrollTrap(18,9, (ChapterID*2)+1, DoubleHit)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 

//Flower(38,9)



ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 



LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(10,5,17,13)) //w patch 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(10,13,17,20)) //w patch 



AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Bushes  
LOAD1 0x1 HumanTrainers
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 



CHECK_EVENTID EarthbadgeObtained 
BNE 27 sC s0 
LOAD1 1 GymLeaderUnitGroup 
ENUN 
MarkTrainerAsDefeated(GymLeader) 
LABEL 27 


CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

GymLeaderUnitGroup:
UNIT GymLeader MistyID 0x0 Level(LVFACEDOWN, Enemy, 1)   [17,22] 0	0x0 0x01 REDA17R22 [0x0,0x0,0x0,0x0] DoNothing
UNIT 

// Wilds - SpearowID	BellsproutID

EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] [6,3,0,0x20] // do nothing and have 0 mov 
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] [6,3,0,0x20] 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,2] 001b	0x0 0x01 REDA0R2 [0x0,0x0,0x0,0x0] [6,3,0,0x20] 
//UNIT 0xF0 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsB:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] [6,3,0,0x20] 
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] [6,3,0,0x20] 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,2] 001b	0x0 0x01 REDA0R2 [0x0,0x0,0x0,0x0] [6,3,0,0x20] 
//UNIT 0xF1 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 


ReinforcementUnits:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] [6,3,0,0x20] 
UNIT 



// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
SHORT R5_0xE0_BQ // 0xE0 
SHORT R5_0xE1_BQ // 0xE0 
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
SHORT R5_0xE0_BD // 0xE0 
SHORT 600 // Gold 
SHORT R5_0xE1_BD // 0xE0 
SHORT 800 // Gold 
TDQ_TableTerminator ; }

HumanTrainers:
UNIT 0xE0 super_nerdID 0x0 Level(0, Enemy, 1) [21,6]  0b 0x0	0x0 0x0 [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE1 battle_girlID 0x0 Level(0, Enemy, 1) [7,26]  0b 0x0	0x0 0x0 [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT



EnemyTrainers0: // super nerd
UNIT GenericB 	PikachuID 0xE0 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	PikachuID 0xE0 	Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	PikachuID 0xE0 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: // battle girl 
UNIT GenericB 	BulbasaurID 0xE1 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	CharmanderID 0xE1 	Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	SquirtleID 0xE1 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	EeveeID 0xE1 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT


	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID