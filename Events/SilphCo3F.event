#define ChapterID SilphCo3FCh
#define GenericA UnitRoute17Wild
#define GenericB UnitCyclingRoadTrainer
#define ClassA ClassRoute17WildA
#define ClassB ClassRoute17WildB
#define WildLvl 35
#define TrainerL 40




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter: // Use this in all non-gym / non-tutorial chapters
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
UnusedPointers //POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2_Empty
POIN Units1_Empty Units1_Empty  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene_Empty 

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnits, 4, 5) 
Reinforce(0xF1, 1, ReinforcementUnits, 6, 5) 
Reinforce(0xF2, 1, ReinforcementUnits, 7, 5) 
Reinforce(0xF3, 1, ReinforcementUnits, 3, 5) 
Reinforce(0xF4, 1, ReinforcementUnits, 5, 5) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN




LocationBasedEvents:
House(0, ToSilphCo2F, 28,3)
House(0, ToSilphCo4F_Stairs, 32,3)
Stairs(0,19,7,19,7) // does nothing but will activate the range event 
Stairs(1,18,18,18,18)
Stairs(2, 4,10,4,10)

Stairs(3, 8, 21, 8,21)
Stairs(4, 31,21,31,21)

END_MAIN

ToSilphCo2F_TeleA:
PlayerInRange
ForcedChapterTransition(SilphCo2FCh, 3,7) // path of progression 
ToSilphCo2F_TeleB:
PlayerInRange
ForcedChapterTransition(SilphCo2FCh, 34,7) 
ToSilphCo4F_Tele:
PlayerInRange
ForcedChapterTransition(SilphCo4FCh, 12,18)

ToSilphCo3F_TeleA:
PlayerInRange
ForcedChapterTransition(SilphCo3FCh, 8,21)
ToSilphCo3F_TeleB:
PlayerInRange
ForcedChapterTransition(SilphCo3FCh, 31,21)


ToSilphCo2F:
ChapterTransition(SilphCo2FCh, 29,3)
ToSilphCo4F_Stairs:
ChapterTransition(SilphCo4FCh, 19,3)



MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
// AREA 0 ToSilphCo4F_Stairs [32,3][32,3] 
// AREA 0 ToSilphCo2F [28,3][28,3]
// AREA 0 ToSilphCo2F [28,3][28,3]
AREA 0 ToSilphCo2F_TeleA [18,18][18,18] 
AREA 0 ToSilphCo2F_TeleB [4,10][4,10] 
AREA 0 ToSilphCo4F_Tele [19,7][19,7] 
AREA 0 ToSilphCo3F_TeleA [31,21][31,21] 
AREA 0 ToSilphCo3F_TeleB [8,21][8,21] 
AREA 0 NW_StatsDrained [4,16][5,16] // w 
AREA 0 NW_StatsDrained [15,12][16,12] // mid n  
AREA 0 NW_StatsDrained [15,16][16,16] // mid s  
AREA 0 NW_StatsDrained [30,11][31,11] // ne 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(28,3) 
EscapeTileEntry(32,3) 

EscapeTileTerminator ; } 
#endif 


NW_StatsDrained:
PlayerInRange
CHECK_EVENTID CardKeyFlag 
BNE 99 sC s0 
TutText(DefFeelsSapped)
DebuffUnit(0x7FFF, DefResDebuff) // -10 str/def/skl, -5 luk 
LABEL 99 
NoFade 
ENDA 

// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 

Traps1:
//MineTrap(4,15)
//MineTrap(5,15)
MineTrap(4,16)
MineTrap(5,16)

//MineTrap(15,11)
//MineTrap(16,11)
MineTrap(15,12)
MineTrap(16,12)

//MineTrap(15,15)
//MineTrap(16,15)
MineTrap(15,16)
MineTrap(16,16)

//MineTrap(30,10)
//MineTrap(31,10)
MineTrap(30,11)
MineTrap(31,11)

EnterTutTrap(23,4, OutOfServiceText)

BlankExamineTrap(13,19,SilphCo_3F_Report_A)
BlankExamineTrap(23,20,SilphCo_3F_Report_B)
//CoinsTrap(29,18,ChapterID*2,450)
//CoinsTrap(57,15,(ChapterID*2)+1,600)


//SilphCo3F: Flamethrower Carbos 
//Route16: Fly, PaddedShieldT2 


//CutBush(12,10)
//RockSmash(29,9)

//StrengthBoulder(4,3)


CoinsTrap(7,6,(ChapterID*2)+1,600)
CoinsTrap(3,19,(ChapterID*2),600)

RedPokeballTrap(6,19, (ChapterID*2)+1, HPUp) 
RedPokeballTrap(33,14, (ChapterID*2), Calcium) 

//SkillAccessoryTrap(15,23, (ChapterID*2)+1, CounterMagicID) 

StatAccessoryTrap(4,21, (ChapterID*2)+1, SteelShield_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID)
 
SkillScrollTrap(3,8, ChapterID*2, SilentPrideID)

SpellScrollTrap(30,19, (ChapterID*2)+1, SwordsDance) 



ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(15,7,20,11)) //E patch 


AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Bushes  
LOAD1 0x1 HumanTrainers
ENUN 
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent
CHECK_EVENTID CardKeyFlag 
BEQ 99 sC s0 
ASMC RemoveAllMineTraps
LABEL 99
NoFade
ENDA




EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT 0xF0 TeleporterID 0x0 Level(0, Enemy, 1)   [3,11]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 TeleporterID 0x0 Level(0, Enemy, 1)   [9,20]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF2 TeleporterID 0x0 Level(0, Enemy, 1)   [18,6]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF3 TeleporterID 0x0 Level(0, Enemy, 1)   [17,17]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF4 TeleporterID 0x0 Level(0, Enemy, 1)   [30,20]  0b	0x0 0 0  [0x0,0x0,0x0,0x0] BushAI
UNIT 

// Teleporter / blank unit to spawn Porygons? 
ReinforcementUnits:
UNIT Reinforcement0 PorygonID 0x0 Level(0, Enemy, 1)   [0,0] 0b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI
UNIT 



HumanTrainers:
UNIT 0xE0 rocket_mID 0x0 Level(0, Enemy, 1) [4,9]  0b 0x0	0x0 0x0  [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE1 scientistID 0x0 Level(0, Enemy, 1) [15,10]  0b 0x0	0x0 0x0  [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE2 scientistID 0x0 Level(0, Enemy, 1) [22,17]  0b 0x0	0x0 0x0  [OneRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE3 rocket_fID 0x0 Level(0, Enemy, 1) [28,5]  0b 0x0	0x0 0x0  [ThreeRangeWep,0x0,0x0,0x0] TrainerAI
UNIT 0xE4 rocket_mID 0x0 Level(0, Enemy, 1) [32,12]  0b 0x0	0x0 0x0  [FiveRangeWep,0x0,0x0,0x0] TrainerBossAI
UNIT

// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers0) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers1) 
MS_TableEntry(0xE2, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers2) 
MS_TableEntry(0xE3, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers3) 
MS_TableEntry(0xE4, 0, 0, 0, 1, 1, 0, 1, EnemyTrainers4) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
SHORT SilphCo_3F_0xE0_BQ // 0xE0 
SHORT SilphCo_3F_0xE1_BQ // 0xE0 
SHORT SilphCo_3F_0xE2_BQ // 0xE0 
SHORT SilphCo_3F_0xE3_BQ // 0xE0 
SHORT SilphCo_3F_0xE4_BQ // 0xE0 
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
SHORT SilphCo_3F_0xE0_BD // 0xE0 
SHORT 600 // Gold 
SHORT SilphCo_3F_0xE1_BD // 0xE0 
SHORT 600 // Gold 
SHORT SilphCo_3F_0xE2_BD // 0xE0 
SHORT 600 // Gold 
SHORT SilphCo_3F_0xE3_BD // 0xE0 
SHORT 600 // Gold 
SHORT SilphCo_3F_0xE4_BD // 0xE0 
SHORT 600 // Gold 
TDQ_TableTerminator ; }

// wild: Porygon 
// trainer's 2F: Zubat/Golbat, Rattata/Raticate, Machop/Machoke 
// Trainer's 3F: Ekans/Arbok, Koffing/Weezing, Zubat, Rattata 
// Trainer's 4F: Drowzee, Grimer, Cubone, Golbat, Raticate, Machoke 

EnemyTrainers0: 
UNIT GenericB 	EkansID 0xE0 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
//UNIT GenericB 	EkansID 0xE0 	Level(0, Enemy, 1) [10,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	ArbokID 0xE0 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	EkansID 0xE0 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT GenericB 	EkansID 0xE0 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupOneAI
UNIT

EnemyTrainers1: 
UNIT GenericB 	KoffingID 	0xE1 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	KoffingID 		0xE1 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	WeezingID 	0xE1 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
//UNIT GenericB 	KoffingID 		0xE1 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	KoffingID 		0xE1 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT

EnemyTrainers2: 
UNIT GenericB 	ArbokID 	0xE2 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	WeezingID 		0xE2 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT GenericB 	RattataID 		0xE2 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupThreeAI
UNIT

EnemyTrainers3: 
UNIT GenericB 	ZubatID 		0xE3 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB 	RattataID 	0xE3 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB 	RattataID 		0xE3 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT GenericB 	ZubatID 		0xE3 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFourAI
UNIT

EnemyTrainers4: 
UNIT GenericB 	EkansID 		0xE4 		Level(0, Enemy, 1) [9,11]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB 	ArbokID 		0xE4 		Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB 	WeezingID 		0xE4 		Level(0, Enemy, 1) [9,9]    0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB 	KoffingID 		0xE4 		Level(0, Enemy, 1) [11,9]   0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT


#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID