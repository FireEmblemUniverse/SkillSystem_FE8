#define ChapterID SafariECh
#define GenericA UnitSafariWild
#define GenericB UnitRoute16Wild
#define ClassA ClassSafariWildA
#define ClassB ClassSafariWildD
#define ClassC ClassSafariWildE
#define WildLvl 28
#define TrainerL 30

// Scyther, Tauros, Kangaskhan as rare & leaders 
// S has Dragonair that summons water mons 
// all have water mons & WildA 
// E has WildD Kangaskhan, N has WildC Tauros
// W has WildB Scyther


EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnits, 2, 4) 
Reinforce(0xF1, 1, ReinforcementUnits, 3, 4) 
Reinforce(0xF2, 1, ReinforcementUnits, 7, 4) 
Reinforce(0xF3, 1, ReinforcementUnits, 8, 4) 
Reinforce(0xF4, 1, ReinforcementUnits_Water, 8, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
CHAR 0 SafariKogaEvent [0x0, GymLeader] 0 // NPC
AllTrainersPostBattleTalk
END_MAIN

SafariKogaEvent: 
SVAL s1 GymLeader 
SVAL s3 3 // up
ASMC SetUnitFacingASMC
Text(KogaSafariText2)

NoFade 
ENDA 


LocationBasedEvents:
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToSafariS [0,21] [0,22] 
AREA 0 ToSafariN [0,4] [0,5] 
AREA KogaSafariFlag KogaSafariEvent [3,21][17,24] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(0,21) 
EscapeTileEntry(0,22) 
EscapeTileEntry(0,4) 
EscapeTileEntry(0,5) 
EscapeTileTerminator ; } 
#endif 


KogaSafariEvent:
EVBIT_MODIFY 4 
ASMC PauseFreeMovementASMC
ENUT HideUnitIconsFlag


// gets rid of danger radius, but flashes the map red for a frame or so 
// UnsetDangerRadius(GymLeaderPkmn)
// VCWF 1 // Fog 
// ASMC 0x801a1f5
// VCWF 0 // Fog 


CAM1 [15,18]
CURSOR_FLASHING GymLeader 
STAL 40 
CURE
EVBIT_T 9 
MOVE 8 GymLeaderPkmn [13,12]
MOVE 8 GymLeader [13,13]
ENUN
SVAL s1 GymLeader 
SVAL s3 3 // up
ASMC SetUnitFacingASMC
SVAL s1 GymLeaderPkmn 
SVAL s3 3 // up
ASMC SetUnitFacingASMC
Text(KogaSafariText)
CURSOR_FLASHING GymLeaderPkmn 
STAL 20 
CURE 
SelfDamageLikePoison(BossPkmn, 5)
SetUnitStatus(BossPkmn, BadStatus, 0x41)
STAL 20 
ENUF HideUnitIconsFlag
VCWF 0 // Fog off 
UNCR(0x7fff, 0x42) 
NoFade 
ENDA 

ToSafariS:
ChapterTransition(SafariSCh, 38,11)

ToSafariN:
ChapterTransition(SafariNCh, 43,28)




// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(29,18,ChapterID*2,450)
//CoinsTrap(57,15,(ChapterID*2)+1,600)

SignBTrap(11,3, ChapterID, 0x0) //no extra text 
SignATrap(11,22, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

EnterWallTrap(34,8, SafariEHouseText)

CutBush(19,22)
RockSmash(13,6)

//StrengthBoulder(4,3)

//StatAccessoryTrap(17,20, (ChapterID*2), BronzeShield_BoostIndex) 
RedPokeballTrap(28,3, (ChapterID*2)+1, Protein) 
//RedPokeballTrap(34,7, (ChapterID*2), SuperPotion) 
//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 




BerryTree(16,20,5)
BerryTree(18,12,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
SpellScrollTrap(8,11, (ChapterID*2), Psybeam)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 
HealTile(26,6)
ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(14,1,28,2)) //N patch 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(29,1,39,7)) //NE patch 

CHECK_EVENTID KogaSafariFlag 
BEQ 26 sC s0 
LOAD1 0x1 EnemyUnitsC
ENUN
LABEL 26 
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(6,8,25,16)) //W patch 
LOAD1 0x1 EnemyUnitsD
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(24,19,37,24)) //SE patch 

LOAD1 0x1 EnemyUnitsE
ENUN
RandomizeEnemyCoords(Shallow, Range(0,0,5,5), Range(14,10,29,22)) //Water patch 
LOAD1 0x1 BossUnit
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(8,9,14,15)) //

UnmarkTrainerAsDefeated(0xEE)

CHECK_EVENTID KogaSafariFlag 
BNE 27 sC s0 
DISA BossPkmn
DISA GenericB
DISA GenericB // to avoid SMS capacity 
ENUT HideUnitIconsFlag
LOAD1 1 KogaUnitGroup 
ENUN 
MarkTrainerAsDefeated(GymLeader) 
// MarkTrainerAsDefeated(GymLeaderPkmn) // to avoid the ! icon, but makes talk bubble appear instead 
// MarkTrainerAsDefeated(BossPkmn) 
LABEL 27 


AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  
 // Bushes  
//LOAD1 0x1 HumanTrainers
//ENUN 
//AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA


KogaUnitGroup:
UNIT GymLeader KogaID 0x0 Level(LVFACEUP, Enemy, 1)   [15,18] 0	0x0 0x01 REDA15R18 [0x0,0x0,0x0,0x0] DoNothing
UNIT GymLeaderPkmn VenomothID 0x0 Level(0, Enemy, 1)   [15,17] 0	0x0 0x01 REDA15R17 [RedGem,0x0,0x0,0x0] DoNothingBoss
UNIT BossPkmn KangaskhanID 0x0 Level(0, Enemy, 1) [13,11]  0b 0x0	0x1 REDA13R11 [Tackle, 0x0,0x0,0x0] DoNothingBoss
UNIT 
// maybe some cutscene of him KO'ing the Kangaskhan 


// Scyther, Tauros, Kangaskhan as rare & leaders 
// S has Dragonair that summons water mons 
// all have water mons & WildA 
// E has WildB Scyther, N has WildC Tauros
// W has WildD Kangaskhan 

EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF0 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericB ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF1 BushID 0x0 Level(0, Enemy, 1)   [0,4]  0b	0x0 0x01 REDA0R4  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsC:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF2 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsD:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericB ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF3 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsE:
// UNIT GenericA ClassC 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF4 SuspiciousWaterID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

ReinforcementUnits:
UNIT Reinforcement0 ClassB 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

ReinforcementUnits_Water:
UNIT Reinforcement0 ClassSafariWildE 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 



BossUnit:
UNIT BossPkmn KangaskhanID 0x0 Level(0, Enemy, 1) [0,0]  0b 0x0	0x1 REDA0R0 [Ember, Tackle,0x0,0x0] TrainerAI  // Trainer has its 1st wep removed when summoning 
UNIT 

BossSummons: 
UNIT GenericB 	VenonatID 		0xEE 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	ClassA 		0xEE 	Level(0, Enemy, 1) [11,11]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	ClassA 		0xEE 	Level(0, Enemy, 1) [10,10]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	ClassA 		0xEE 	Level(0, Enemy, 1) [9,9]  1b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	ParasectID 		0xEE 	Level(0, Enemy, 1) [11,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT

{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xEE, 0, 0, 0, 1, 1, 0, 1, BossSummons)  
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xE, 0x0)
TBQ_TableTerminator; 

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xE, 0x00, 0) 
TDQ_TableTerminator ; }

 
 
ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 
	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef ClassC
#undef WildLvl
#undef TrainerL
#undef ChapterID