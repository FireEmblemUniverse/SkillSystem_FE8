#define ChapterID SeafoamB5Ch
#define GenericA UnitSeafoamWild
#define GenericB UnitSeafoamTrainer
#define ClassA ClassSeafoamWildA
#define ClassB ClassSeafoamWildB
#define WildLvl 50
#define TrainerL 50




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnitsA, 2, 4) 
Reinforce(0xF1, 1, ReinforcementUnitsA, 3, 4) 
Reinforce(0xF2, 1, ReinforcementUnitsA, 3, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(0, ToSeafoamB4E, 32,5) 
House(0, ToSeafoamB4W, 15,9) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
AFEV 0 ArticunoFledEvent 0 
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(32,5) 
EscapeTileEntry(15,9) 
EscapeTileTerminator ; } 
#endif 


ToSeafoamB4E:
ChapterTransition(SeafoamB4Ch, 29,4)
ToSeafoamB4W:
ChapterTransition(SeafoamB4Ch, 11,9)



ArticunoFledEvent: 
CHECK_EVENTID ArticunoFledFlag 
BNE 99 rC r0 

GetTargetID
SADD s2 sC s0 
SVAL s1 ArticunoID 
CHECK_CLASS 0x7ffd 
BEQ 0 sC s1 

CHECK_ACTIVE 
SADD s2 sC s0 
CHECK_CLASS 0x7ffd
BEQ 0 sC s1 
GOTO 99 

LABEL 0 // unit ID in s2 where class is Articuno and Articuno has never been defeated 

// Check if legendary is at low hp. If so, flee. 
// Proc skill for legendaries prevents them from getting KO'd 
GetUnitStatus(0x7ffd, CurrentHP) 
SADD sA sC s0 
GetUnitStatus(0x7ffd, MaxHP) 
SVAL s1 3 
SDIV s9 sC s1 
BGE 99 sA s9 // if over 1/3rd hp, do nothing  
ENUT ArticunoFledFlag // 1/3rd or less hp, so flee 

CALL ModularSummonWildTrainerEvent // looks for unit ID of attacker or defender from 0xD0 - 0xDF, originally 0xE0 - 0xEF 


LABEL 99 
NoFade 
ENDA 






// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(22,14,ChapterID*2,1220)
//CoinsTrap(57,15,(ChapterID*2)+1,600)

//VictoryRoadB1: RareCandy, Iron, 2000g
//VictoryRoadB2: Outrage, Protein, Megahorn
//VictoryRoadB3: DarkPulse, 

//RockSmash(8,15)

//Rock(21,17) 
//Rock(27,15) 
StrengthBoulder(8,18) 
StrengthBoulder(9,18) 
// Conditionally deleted 
 
RaftTrap(26,18)
RaftTrap(27,18)
RaftTrap(28,18)
RaftTrap(26,17)
RaftTrap(27,17)
RaftTrap(28,17)
RaftTrap(27,16)

RaftTrap(8,17)
RaftTrap(9,17)
RaftTrap(7,16)
RaftTrap(8,16)
RaftTrap(9,16)
RaftTrap(10,16)
RaftTrap(8,15)
RaftTrap(9,15)

//StrengthBoulder(4,3)

//StatAccessoryTrap(43, 13, (ChapterID*2), EnhancedWard_BoostIndex) 
//RedPokeballTrap(29,8, (ChapterID*2)+1, Protein) 
//RedPokeballTrap(34,7, (ChapterID*2), SuperPotion) 
//SkillAccessoryTrap(26,4, (ChapterID*2)+1, GaleforceID) 
//SkillAccessoryTrap(13,11, (ChapterID*2), BlossomID) 


//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
SkillAccessoryTrap(31,4, ChapterID*2, CleatsID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

SignBTrap(12,8, ChapterID, 0x0) //no extra text 
SignATrap(30,3, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(6,18, ChapterID*2, RockyHelmetSkillID)
//SpellScrollTrap(19,7, (ChapterID*2)+1, Outrage)
SpellScrollTrap(13,18, (ChapterID*2), Blizzard)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
SaveCost(18,8) 



//Flower(18,10)


ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

CHECK_EVENTID B4_BoulderAFlag
BNE 2 sC s0 // if on, spawn
RemoveTrap(8,18)
LABEL 2 

CHECK_EVENTID B4_BoulderBFlag
BNE 3 sC s0 // if on, spawn 
RemoveTrap(9,18)
LABEL 3


CHECK_EVENTID B4_BoulderAFlag 
BEQ 4 sC s0 
CHECK_EVENTID B4_BoulderBFlag 
BEQ 4 sC s0 
TILECHANGE 0 // change the current if both flags are on 
LABEL 4 


LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,3,3), Range(11,7,24,20)) 
LOAD1 0x1 EnemyUnitsC
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,3,3), Range(21,1,33,6)) 

LOAD1 0x1 EnemyUnitsB
ENUN 
RandomizeEnemyCoords(Sea, Range(0,0,3,3), Range(21,7,34,18)) 

//LOAD1 0x1 EnemyBurrows
ENUN 
AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds 

CheckTrainerFlag(0xEE) // based on unit IDs 0xE0-0xEF per chapter 
BNE 10 rC r0 
LOAD1 0x1 ArticunoBattleUnitGroup 
ENUN 
GOTO 11 
LABEL 10 
ENUT ArticunoFledFlag
LABEL 11 


AutoLevelUnits(WildLvl, True, 0xE0EF) // Trainers 

CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

WaterCurrent_East: 
SCOORD sB [27,18] // it will find the nearest tile to this coordinate 
CALL SendActorToNearestCoord
NoFade 
ENDA 

WaterCurrent_West: 
CHECK_EVENTID B4_BoulderAFlag 
BEQ 4 sC s0 
CHECK_EVENTID B4_BoulderBFlag 
BEQ 4 sC s0 
GOTO 99 
LABEL 4 
SCOORD sB [12,13] // it will find the nearest tile to this coordinate 
CALL SendActorToNearestCoord
LABEL 99 
NoFade 
ENDA 


Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
AREA 0 WaterCurrent_East [26,19][28,21] 
AREA 0 WaterCurrent_West [3,13][16,16] 
AREA 0 WaterCurrent_West [8,17][9,21] 
AREA 0 WaterCurrent_West [3,5][9,12] 
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 



EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsC:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassB 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyBurrows:
UNIT 0xF0 BurrowID 0x0 Level(0, Enemy, 1)   [11,13]  0b	0x0 0x01 REDA11R13  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 BurrowID 0x0 Level(0, Enemy, 1)   [16,1]  0b	0x0 0x01 REDA16R1  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF2 BurrowID 0x0 Level(0, Enemy, 1)   [30,0]  0b	0x0 0x01 REDA30R0  [0x0,0x0,0x0,0x0] BushAI
UNIT 

ReinforcementUnitsA:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

ReinforcementUnitsB:
UNIT Reinforcement0 ClassB 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xEE, 0, 0, 0, 1, 1, 0, 1, ArticunoUnits) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xE, ArticunoChallengeText)
TDQ_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xE, ArticunoDefeatText, 0) 
TDQ_TableTerminator ; }

//ShellderID	SeelID	SlowpokeID	GolbatID
//JynxID	DewgongID	SlowbroID	0x00


ArticunoBattleUnitGroup:
UNIT 0xEE ArticunoID 0x0 Level(0, Enemy, 1) [10,2]  0b 0x0	0x1 REDA10R2 [Leer,Blizzard,Screech,0x0] TrainerAI  // Trainer has its 1st wep removed when summoning 
UNIT 

ArticunoUnits: 
UNIT GenericA 	VaporeonID 		0xEE 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	DewgongID 		0xEE 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	JynxID 		0xEE 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	SlowbroID 		0xEE 	Level(0, Enemy, 1) [11,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericA 	CloysterID 		0xEE 	Level(0, Enemy, 1) [11,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT







	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID