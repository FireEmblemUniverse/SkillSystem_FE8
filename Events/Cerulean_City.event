#define ChapterID CeruleanCh
#define GenericB UnitCeruleanTrainer
#define WildLvl 5 
#define TrainerL 14 





EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
}




CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
CHAR PurchasedGrowlitheFlag PurchaseGrowlitheevent [0x0, OaksAide] 0 // NPC
TrainerPostBattleTalk(0xE0) // NPC talk again 
TrainerPostBattleTalk(OaksAide) // NPC talk again 
END_MAIN

PurchaseGrowlitheevent:
EVBIT_MODIFY 4 
WallText(CatchBeforePurchaseGrowlitheText)
CheckIfCaught(BellsproutID) 
BEQ 30 sC s0 
CheckIfCaught(EkansID)
BEQ 30 sC s0 
CheckIfCaught(SpearowID)
BEQ 30 sC s0 

EVBIT_MODIFY 4 
WallText(PurchaseGrowlitheText)
LOAD1 1 GrowlitheUnitGroup  
ENUN 
ENUT FIXED_GROWTHS_FLAG_ID
AutoLevelUnits(TrainerL, True,  TempAlly<<8|TempAlly) // Growlithe 
SelectCharacter(TempAlly, 0, 0, 0, 0, 3000, 0, 0, 0, 0) 
SVAL sB 0x100 
BEQ 10 sC sB 
GOTO 20

LABEL 10 
UNCR(0x7fff, 1) // SelectCharacter ends MMS 
WallText(No_PurchasedGrowlitheText)
ENUF PurchasedGrowlitheFlag
DISA TempAlly
GOTO 63

LABEL 20
CHECK_COORDS 0x7fff
SADD sA sC s0  
SET_ACTIVE 0
WallText(Yes_PurchasedGrowlitheText)
SADD sB sA s0  
ASMC Get7thUnitASMC
BEQ 21 sC s0 
WARP_OUT
STAL 30
UNCM(TempAlly, 0x10009) // Undeploy + escape the Growlithe
DISA OaksAidePkmn 
GOTO 22 
LABEL 21
DISA OaksAidePkmn  
MOVENEXTTO (-1) TempAlly 0x7FFe 
ENUN 
LABEL 22 
SVAL s1 TempAlly // Growlithe's UnitID 
ASMC ChangeS1UnitIntoLowestUnitID
SET_ACTIVE 0x7ffe
GOTO 63 

LABEL 30 // Haven't caught the pokemon 
ENUF PurchasedGrowlitheFlag

LABEL 63 
NoFade
ENDA 



LocationBasedEvents:
House(CeruleanGymClosedFlag,EnterGym,24,20) //
House(0, EnterPillagedHouseS, 23,10) 
House(0, EnterPillagedHouseN, 24, 7)
Vendor(ShopItems,22,27)
END_MAIN

EnterPillagedHouseS:
PauseFreeMovement
CHECK_COORDS 0x7FFF 
SADD sB sC s0 
SET_ACTIVE 0
MOVE (-1) 0x7FFE [24,7]
ENUN
SET_CURSOR [24,7]
NoFade 
ENDA 


EnterPillagedHouseN:
PauseFreeMovement
CHECK_COORDS 0x7FFF 
SADD sB sC s0 
SET_ACTIVE 0
MOVE (-1) 0x7FFE [23,10]
ENUN
SET_CURSOR [23,10]
NoFade 
ENDA 

EnterGym:
ENUF CeruleanGymClosedFlag 
ForcedChapterTransition(CeruleanGymCh, 9, 17)
NoFade 
ENDA 

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV 0 CityAfev 0
//AFEV 0 RefreshIfNotInDanger 0 
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
AREA 0 ToRoute4E_Walk [0,19] [0,21] 
AREA 0 ToRoute4E_Swim [0,1] [0,3] 
AREA 0 ToRoute24_Walk [15,0] [17,0] 
AREA 0 ToRoute24_Walk_E [19,0] [21,0] 
AREA 0 ToRoute24_Swim [9,0] [13,0] 
AREA 0 ToRoute9W [31,10] [31,18] 
AREA 0 ToRoute5 [19,31] [19,31] // Cut bush 
AFEV DisableTutFlag_A TutMsg1 0
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(0,20) 
EscapeTileEntry(0,2) 
EscapeTileEntry(11,0) 
EscapeTileEntry(16,0) 
EscapeTileEntry(31,12) 
EscapeTileEntry(31,14) 
EscapeTileEntry(31,16) 
EscapeTileEntry(19,31) 

EscapeTileTerminator ; } 
#endif 

ToRoute5:
ChapterTransition(Route5Ch, 16, 0)

ToRoute9W:
ChapterTransition(Route9WCh, 0, 8)


ToRoute4E_Walk:
ChapterTransition(Route4ECh, 59, 11)

ToRoute4E_Swim:
ChapterTransition(Route4ECh, 58, 1)

ToRoute24_Walk:
CHECK_EVENTID PlayableCutsceneFlag 
BNE 20 rC r0 
ChapterTransition(Route24Ch, 12, 39)
LABEL 20 // Cutscene prevents escape 
CALL CannotEscapeTrainerBattleEvent
LABEL 63 
NoFade 
ENDA 

ToRoute24_Walk_E:
CHECK_EVENTID PlayableCutsceneFlag 
BNE 20 rC r0 
ChapterTransition(Route24Ch, 15, 38)
LABEL 20 // Cutscene prevents escape 
CALL CannotEscapeTrainerBattleEvent
LABEL 63 
NoFade 
ENDA 


ToRoute24_Swim:
ChapterTransition(Route24Ch,6, 38)


TutMsg1: 
CHECK_EVENTID DisableTutMsgsFlag
BNE 99 sC s0 
ENUF DisableTutFlag_A
SVAL s1 ((ChapterID*2)+(HelpMsgFlagOffset<<3)) 
ASMC CheckNewFlag_ASMC 
BNE 99 sC s0 
CountPlayersInRange_ASMC(0,16,31,31) 
BEQ 99 sC s0 
ENUT DisableTutFlag_A
EVBIT_MODIFY 4
PauseFreeMovement
STAL 5
CAM1 [25,31]
CUMO [25,31]
STAL 30
CURE  
TutText(TrainerTip_FourSkills)
SVAL s1 ((ChapterID*2)+(HelpMsgFlagOffset<<3)) 
ASMC SetNewFlag_ASMC 
LABEL 99 
NoFade 
ENDA 


// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(28,14,ChapterID*2,350)
//CoinsTrap(43,13,(ChapterID*2)+1,400)

RaftTrap(10,0)
RaftTrap(11,0)
RaftTrap(12,0)
RaftTrap(10,1)
RaftTrap(11,1)
RaftTrap(12,1)
RaftTrap(11,2)

RaftTrap(0,1)
RaftTrap(0,2)
RaftTrap(0,3)
RaftTrap(1,1)
RaftTrap(1,2)
RaftTrap(1,3)
RaftTrap(2,2)


CutBush(19,31)
CutBush(29,19)
Save(15,17) // Pokecenter 

//RockSmash(3,2)
//StrengthBoulder(4,3)
//StatAccessoryTrap(30,18, ChapterID*2, WiseGlasses_BoostIndex)
SkillAccessoryTrap(1,30, ChapterID*2, WardingStanceID)
SkillAccessoryTrap(21,6, (ChapterID*2)+1, ExpShareID)

RedPokeballTrap(11,6, (ChapterID*2)+1, ExoticCandy) // unobtainable 

SignBTrap(30,9, ChapterID, 0x0) //no extra text 
SignATrap(1,22, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

//SkillScrollTrap(15,11, ChapterID*2, AcrobatID)
//SpellScrollTrap(17,11, (ChapterID*2)+1, Ember)
//OpenPokeball(8,3)

BlankExamineTrap(20,20,CeruleanGymSignText)
SignTrap(4,27, CeruleanBicycleShopSignText) // Wooden 
TutSign(25,31, ChapterID*2, TrainerTip_FourSkills) // Wooden 
//Sign2Trap(16,7, PewterMuseumSignText) // Metal ? 
EnterWallTrap(3,10, CeruleanCityNWHouseText) // 
EnterWallTrap(10,10, CeruleanCityNHouseText) // 
EnterWallTrap(8,16, CeruleanCityWHouseText) // 
EnterWallTrap(16,27, CeruleanCitySHouseText) //   

EnterWallTrap(6,27, BicycleShopText) // this has two doors    
EnterWallTrap(7,27, BicycleShopText) //   



BerryTree(29,26,5)

Flower(5,21)
Flower(7,21)
Flower(9,21)
Flower(6,20)
Flower(8,20)

Flower(13,5)
Flower(11,5)
Flower(9,5)
Flower(12,6)
Flower(10,6)




ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 
CHECK_EVENTID CascadebadgeObtained
BEQ 0 rC r0 
CHECK_EVENTID SSAnneTicketFlag
BEQ 0 rC r0 
GOTO 1 
LABEL 0
LOAD1 0x1 OfficerUnitGroup
ENUN 
MarkTrainerAsDefeated(0xE1) 
LABEL 1


CheckTrainerFlag(0xEF) // based on unit IDs 0xE0-0xEF per chapter 
BNE 10 rC r0 
LOAD1 0x1 GaryBattleUnitGroup 
ENUN 

GOTO 0x63 
LABEL 10 
CALL CityBeginningScene // Move bonus only when Gary is defeated 
LABEL 0x63
AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given +5 visible levels 

LOAD1 1 OaksAideUnitGroup
ENUN 
MarkTrainerAsDefeated(OaksAide) 
MarkTrainerAsDefeated(OaksAidePkmn) 
CHECK_EVENTID PurchasedGrowlitheFlag 
BEQ 34 sC s0 
DISA OaksAidePkmn 
LABEL 34 

NoFade
ENDA



ALIGN 4
ShopItems:
//SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
//SHLI 0
BYTE StatAccessory MuscleBand_BoostIndex 
BYTE StatAccessory WiseGlasses_BoostIndex
BYTE StatAccessory EnergyBand_BoostIndex

BYTE SuperPotion 5 
BYTE JellyDonut 5
//BYTE SkillScroll TantivyID 
BYTE SuperRepel 1
BYTE EscapeRope 1
BYTE WarpCrystal 1
BYTE SpellScroll Leer SpellScroll Bite SpellScroll MudShot SpellScroll IcyWind
BYTE SpellScroll AttackPulse
BYTE SpellScroll DoubleHit SpellScroll SignalBeam SpellScroll MagicalLeaf 
BYTE SpellScroll Gust SpellScroll Magnitude SpellScroll Confusion // 19
//SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
//SHLI SuperPotion
BYTE $00; ALIGN 4



// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xEF, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsA) 
MS_TableEntry(0xEF, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsB) 
MS_TableEntry(0xEF, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsC) 
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryUnitsD) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xF, GaryCeruleanChallengeText)
SHORT GaryCeruleanChallengeText // 0xE0 
SHORT NoCascadeBadgeText // 0xE0 
TDQ_TableTerminator; 

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xF, GaryCeruleanDefeatText, 2000) 
BD((OaksAide-0xE0), CeruleanOaksAideBD, 1) 
SHORT GaryCeruleanDefeatText // 0xE0 
SHORT 2000 // Gold 
SHORT NoCascadeBadgeText // 0xE0 
SHORT 2000 // Gold 
TDQ_TableTerminator ; }

GrowlitheUnitGroup:
UNIT TempAlly GrowlitheID 0x0 Level(0, Ally, 1) [0,0]  0b 0x0	0x1 REDA0R0 [0x0,0x0,0x0,0x0] DoNothing
UNIT

OaksAideUnitGroup:
UNIT OaksAide OaksAideClass 0x0 Level(LVFACEDOWN, Enemy, 1) [12,17]  0b 0x0	0 0 [0x0,0x0,0x0,0x0] DoNothing
UNIT OaksAidePkmn GrowlitheID 0x0 Level(0, Enemy, 1) [11,17]  0b 0x0	0 0 [0x0,0x0,0x0,0x0] DoNothing
UNIT

GaryBattleUnitGroup:
UNIT 0xEF blueID 0x0 Level(0, Enemy, 1) [16,0]  0b 0x0	0x1 REDA16R0 [SevenRangeWep,0x0,0x0,0x0] TrainerAI  
//UNIT GenericB	SquirtleID 0xE0 Level(0, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [JellyDonut,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB	OnixID 0xE0 Level(0, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT 

OfficerUnitGroup:
UNIT 0xE1 policemanID 0x0 Level(0, Enemy, 1) [23,10]  0b 0x0	0x1 REDA23R10 [0x0,0x0,0x0,0x0] DoNothing
UNIT 

 // Accidentally set Pidgey's Autolevel to false, which made it have no commander and not end the Gary fight 
GaryUnitsA:
UNIT GenericB	BulbasaurID 0xEF Level(0, Enemy, 1)   [9,9] 0b	0x0 	0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xEF Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	BeedrillID 0xEF Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AbraID 0xEF 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB 	PidgeyID 0xEF Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PikachuID 0xEF Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsB:
UNIT GenericB	CharmanderID 0xEF Level(0, Enemy, 1)   [9,9] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xEF Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	BeedrillID 0xEF Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AbraID 0xEF 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB 	PidgeyID 0xEF Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PikachuID 0xEF Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsC:
UNIT GenericB	SquirtleID 0xEF Level(0, Enemy, 1)   [9,9] 	0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xEF Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	BeedrillID 0xEF Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AbraID 0xEF 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB 	PidgeyID 0xEF Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PikachuID 0xEF Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsD:
UNIT GenericB	EeveeID 0xEF Level(0, Enemy, 1)   [9,9] 		0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xEF Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	BeedrillID 0xEF Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AbraID 0xEF 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB 	PidgeyID 0xEF Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PikachuID 0xEF Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT




ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 






	
#undef GenericB 
#undef WildLvl
#undef TrainerL
#undef ChapterID
