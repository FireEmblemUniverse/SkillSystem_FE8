#define ChapterID SafariSCh
#define GenericA UnitSafariWild
#define GenericB UnitSafariWild
#define ClassA ClassSafariWildA
#define ClassB ClassSafariWildA
#define ClassC ClassSafariWildE
#define WildLvl 28
#define TrainerL 30

// Scyther, Tauros, Kangaskhan as rare & leaders 
// S has Dragonair that summons water mons 
// all have water mons & WildA 
// E has WildD Kangaskhan, N has WildC Tauros
// W has WildB Scyther


EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnits, 4, 4) 
Reinforce(0xF1, 1, ReinforcementUnits, 6, 4) 
Reinforce(0xF2, 1, ReinforcementUnits, 5, 4) 
Reinforce(0xF3, 1, ReinforcementUnits, 2, 4) 
Reinforce(0xF4, 1, ReinforcementUnits_Water, 3, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToFuschia [19,25] [20,26] 
AREA 0 ToSafariE [39,11] [39,12] 
AREA 0 ToSafariN [19,0] [20,0] 
AREA 0 ToSafariW [0,13] [0,14] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(19,25) 
EscapeTileEntry(20,25) 
EscapeTileEntry(39,11) 
EscapeTileEntry(39,12) 
EscapeTileEntry(19,0) 
EscapeTileEntry(20,0) 
EscapeTileEntry(0,13) 
EscapeTileEntry(0,14) 
EscapeTileTerminator ; } 
#endif 

ToFuschia:
ChapterTransition(FuschiaCh, 21,5)

ToSafariE:
ChapterTransition(SafariECh, 1,21)

ToSafariN:
ChapterTransition(SafariNCh, 24,31)

ToSafariW:
ChapterTransition(SafariWCh, 39,26)




// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(29,18,ChapterID*2,450)
//CoinsTrap(57,15,(ChapterID*2)+1,600)

SignBTrap(3,11, ChapterID, 0x0) //no extra text 
SignATrap(18,22, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 


//CutBush(12,10)
RockSmash(7,17)
RockSmash(34,10)

//StrengthBoulder(4,3)

//StatAccessoryTrap(17,20, (ChapterID*2), BronzeShield_BoostIndex) 
RedPokeballTrap(34,18, (ChapterID*2)+1, ExoticCandy) 

//SkillAccessoryTrap(17,20, (ChapterID*2)+1, VantagePlusID) 

//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
SkillAccessoryTrap(22,11, ChapterID*2, MiracleID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

EnterWallTrap(23,21, SafariSHouseText)



BerryTree(19,11,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
//SpellScrollTrap(18,9, (ChapterID*2)+1, DoubleHit)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(43,3) 
ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(5,3,13,14)) //NW patch 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(20,3,32,8)) //NE patch 

LOAD1 0x1 EnemyUnitsC
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(7,19,18,24)) //SW patch 
LOAD1 0x1 EnemyUnitsD
ENUN
RandomizeEnemyCoords(Grass, Range(0,0,5,5), Range(27,13,35,24)) //SE patch 

LOAD1 0x1 EnemyUnitsE
ENUN
RandomizeEnemyCoords(Shallow, Range(0,0,5,5), Range(12,9,27,14)) //Water patch 
LOAD1 0x1 BossUnit
ENUN
RandomizeEnemyCoords(Shallow, Range(0,0,5,5), Range(12,9,27,14)) //Water patch 

UnmarkTrainerAsDefeated(0xEE)

AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  

 // Bushes  
//LOAD1 0x1 HumanTrainers
//ENUN 
//AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given visible levels 
CALL SetBushHpEvent


CHECK_EVENTID SafariTroubleFlag
BNE 99 sC s0 // if we already were notified the 2nd time, exit 
ShowMap
SVAL s2 SafariTroubleText
CALL Telephone_Normal
ENUT SafariTroubleFlag 


LABEL 0x63
NoFade
ENDA


EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF0 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF1 BushID 0x0 Level(0, Enemy, 1)   [0,4]  0b	0x0 0x01 REDA0R4  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsC:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF2 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsD:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF3 BushID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsE:
UNIT GenericA ClassC 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF4 SuspiciousWaterID 0x0 Level(0, Enemy, 1)   [0,3]  0b	0x0 0x01 REDA0R3  [0x0,0x0,0x0,0x0] BushAI
UNIT 

ReinforcementUnits:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

ReinforcementUnits_Water:
UNIT Reinforcement0 ClassSafariWildE 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

BossUnit:
UNIT 0xEE DragonairID 0x0 Level(0, Enemy, 1) [0,0]  0b 0x0	0x1 REDA0R0 [0x0,0x0,0x0,0x0] TrainerAI  // Trainer has its 1st wep removed when summoning 
UNIT 

BossSummons: 
UNIT GenericB 	GoldeenID 		0xEE 	Level(0, Enemy, 1) [9,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	PoliwagID 		0xEE 	Level(0, Enemy, 1) [11,11]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	DratiniID 		0xEE 	Level(0, Enemy, 1) [10,10]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	PoliwagID 		0xEE 	Level(0, Enemy, 1) [9,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT GenericB 	GoldeenID 		0xEE 	Level(0, Enemy, 1) [11,9]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] SafestZoningGroupTwoAI
UNIT

{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xEE, 0, 0, 0, 1, 1, 0, 1, BossSummons)  
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xE, 0x00)
TDQ_TableTerminator; 

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xE, 0x00, 0) 
TDQ_TableTerminator ; }
 
ShopItems:
SHLI Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 
	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef ClassC
#undef WildLvl
#undef TrainerL
#undef ChapterID