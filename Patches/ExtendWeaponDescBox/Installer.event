#include "EAstdlib.event" 
#include "C_Code.lyn.event" 
// If these procs are active, don't use the extra vram. 
// If you experience graphical glitches, the solution is 
// to look in FEBuilder's debugger to see what procs are running,
// then add the relevant proc(s) to this exception list. 
#define gProc_SaveMenu $a200b8			//{U}
//#define gProc_SaveMenu $A9CFE4			//{J}
#define gProc_SaveMenu2 $A203A8			//{U}
//#define gProc_SaveMenu2 $A9D2D4			//{J}
#define gProc_ChapterMenuUnit $A17B08	//{U}
//#define gProc_ChapterMenuUnit $A93854	//{J}
#define gProc_ChapterMenuStatus $A01B54	//{U}
//#define gProc_ChapterMenuStatus $A73C0C	//{J}
#define gProc_PrepSomethingUnknown $A1898C 
#define gProc_PrepSomethingUnknown2 $A18944 // backup 
#define gProc_PrepScreenPickUnitsMenu $A18E8C
#define gProc_BG3HSlide $A006E4

ALIGN 4 
ProcExceptionsList:
POIN gProc_SaveMenu gProc_SaveMenu2 gProc_ChapterMenuUnit gProc_ChapterMenuStatus
POIN gProc_PrepSomethingUnknown 
POIN gProc_PrepSomethingUnknown2 
WORD 0 // Terminator 

ALIGN 4
InitItemDescVramDoubleProcExceptionsList:
//if both procs are active, don't allocate additional vram
POIN gProc_PrepScreenPickUnitsMenu gProc_BG3HSlide
WORD 0 //Terminator

#ifndef callHackNew 
	#define callHackNew(offset) 		"BYTE $01 $4B $9E $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
#endif 


ALIGN 4 
InitItemDescVram: 
#incbin "InitItemDescVram.dmp" 
POIN ProcExceptionsList
POIN InitItemDescVramDoubleProcExceptionsList

ALIGN 4 
InitProcTextHandles:
#incbin "InitProcTextHandles.dmp" 


ALIGN 4 
InitWepDescTextHandles:
#incbin "InitWepDescTextHandles.dmp" 

ALIGN 4 
YPosDescBox:
#incbin "YPosDescBox.dmp" 

ALIGN 4 
LoadDialogueBoxGfxHook:
#incbin "LoadDialogueBoxGfxHook.dmp" 

PUSH 

ORG $9C63C
//ORG 0x09E8E2    //{J}
BYTE 1 

ORG $8A126		//{U}
//ORG $8C436		//{J}
SHORT $46C0 
callHackNew(InitItemDescVram|1)
SHORT $46C0 $46C0 $46C0 
PROTECT $8A126 $8A126+28		//{U}
//PROTECT $8C436 $8C436+28		//{J}

ORG $8A064		//{U}
//ORG $8C374		//{J}
callHackNew(InitProcTextHandles|1)
PROTECT $8A064 $8A064+12		//{U}
//PROTECT $8C374 $8C374+12		//{J}

ORG $89874		//{U}
//ORG $8BB84		//{J}
callHackNew(InitWepDescTextHandles|1) 
PROTECT $89874 $89874+12		//{U}
//PROTECT $8BB84 $8BB84+12		//{J}

ORG $88C88		//{U}
//ORG $8AF14		//{J}
callHackNew(YPosDescBox|1) // make it 0 if it's negative 
PROTECT $88C88 $88C88+12		//{U}
//PROTECT $8AF14 $8AF14+12		//{J}

ORG $8980C		//{U}
//ORG $8BB1C		//{J}
callHackNew(LoadDialogueBoxGfxHook|1)
PROTECT $8980C $8980C+12	//{U}
//PROTECT $8BB1C $8BB1C+12	//{J}



// from 8089980 
#define LinesToShow 5

ORG $899BC		//{U}
//ORG $8BCDA		//{J}
BYTE (LinesToShow)<<4

ORG $899C0		//{U}
//ORG $8BCDE		//{J}
BYTE (LinesToShow)<<4


// [203E7C4]!!
//ORG $898A4 // default: used by shop, stat screen, send item to supply, itemMenu, and trading on map 
//WORD 0x6012000 // 13000 vanilla

// dunno why 7743 commented this out - probably unnecessary with the trade fix? - Vesly 2024 
ORG $2D2EA		//{U}
//ORG $2D222		//{J}
					// mov r1, #0x90 
//BYTE 0xE1			// lsl r1, #7  = 0x4800 as vram offset to use // 7080 
//ORG $ADB7C // StartSmallBrownNameBoxes (for trading) is called shortly after the prior org 

ORG $89F0C4		//{U}
//ORG $8F361C		//{J}
WORD 0x6013000 // 12000 vanilla

ORG $98998		//{U}
//ORG $9AC70		//{J}
//WORD 0x6012000 // 14000 vanilla

ORG $9B970 // Preps		//{U}
//ORG $9DC34 // Preps		//{J}
WORD 0x6012000 // 14000 vanilla 

ORG $9D9FC // Supply	//{U}
//ORG $9FC9C // Supply	//{J}
WORD 0x6012000 // 13000 vanilla 

//ORG $9F0C4 // List 
//WORD 0x6013000 // 12000 vanilla 

ORG $355A4 // "Select an item to send to supply / discard" 	//{U}
//ORG $354AC // "Select an item to send to supply / discard"		//{J}
WORD 0x6015800 // 14800 vanilla 

ORG $354D8		//{U}
//ORG $353E0		//{J}
SHORT 0x42C0 // 4240 vanilla 

// 7743 did this fix by directly editing the oam table in rom instead of replacing the poin as I did 
ORG $354D4 // from 0x803547C called by 356BC Procs BottomHelpText CallASM
POIN SomeNewOAMTable

//Make scrolling help text only clear space for one line. (It doesn't seem to need it anyway.
//https://discord.com/channels/144670830150811649/725478895226191892/1219846780590751845
ORG $3552A	//{U}
//ORG $35432	//{J}
SHORT 0x46C0 //Remove loop branch so code only runs once

POP 

ALIGN 4 
SomeNewOAMTable: 
SHORT 0   4   8    $C  $10 $14 $18 $1C // Use the full row of VRAM 
SHORT $40 $44 $48 $4C $50 $54 $58 $5C 

#include "vesly-ExtendWeaponDescBox-tradefix/tradefix.event"
