#ifndef EXPAND_AI 
#define EXPAND_AI

PUSH 
ORG $3C86C 
#include "IsUnitIDNotInTableHook.lyn.event" // make it read DoNotAttackTheseUnits / DoNotApproach as a table instead of as a list 
// short enough to fit inline so whatever 
SHORT $46C0 

POP 


#include "ExpandAI_Internals.event"

#include "MakeAIWait.lyn.event" 
#include "GuidePlayerAI.lyn.event"

// Expands AI1 and AI2 lists to 254 entries 
// 0xFF is reserved as do not change AI 
// Add new ones here 

// AI 1 list 
// Vanilla entries take up 0 - 20 
NewAI1Entry(0, AttackInRangeExceptF0toFF) // Do not target units 0xF0 - 0xFD 
//NewAI1Entry(0, 0x085A8870) // Vanilla 
NewAI1Entry(21, DoNothingAI1)
NewAI1Entry(22, AttackIfEnemyInRange)
NewAI1Entry(23, DoNothing1TurnAI1)
NewAI1Entry(24, AttackIfEnemyInRange)
NewAI1Entry(25, AttackIfEnemyInRange)
NewAI1Entry(26, MakeAIWaitLabel)
NewAI1Entry(27, RunAwayLabel)

NewAI1Entry(28, PursueAndSummonOrAttackLabel)
NewAI1Entry(29, RunAwayAndSummonLabel)
NewAI1Entry(30, SummonOrAttackInRangeLabel)
NewAI1Entry(31, TrainerSummonTeamAILabel)
NewAI1Entry(32, MoveTowardsCommanderAILabel)
NewAI1Entry(33, TrainerFleeSummonTeamAILabel)
NewAI1Entry(34, GuidePlayerAILabel)


// AI 2 list
// Vanilla entries take up 0 - 18
NewAI2Entry(0, MoveTowardsEnemy_AI2)
NewAI2Entry(21, DoNothingAI2)
NewAI2Entry(22, Within_2_Safest_Zoning_AI2)
NewAI2Entry(23, Safest_Zoning_AI2)
NewAI2Entry(24, Less_Safe_Zoning_AI2)
NewAI2Entry(25, BeedrilAI_2)

NewAI2Entry(26, MakeAIWaitLabel)
NewAI2Entry(27, RunAwayLabel)
NewAI2Entry(28, PursueAndSummonOrAttackLabel)
NewAI2Entry(29, RunAwayAndSummonLabel)
NewAI2Entry(30, SummonOrAttackInRangeLabel)
NewAI2Entry(31, TrainerSummonTeamAILabel)
NewAI2Entry(32, MoveTowardsCommanderAILabel)
NewAI2Entry(33, TrainerFleeSummonTeamAILabel)
NewAI2Entry(34, DoNothingAI2)

/*
To have AI1 do AI2 instead:
```
ldr r1, =0x30017CC
mov r0, #1 
str r0, [r1] 
b Exit
*/
// store true to 30017CC (gBoolIsAI2 ) and return 1 in r0
// 0x08039DE0 "Unknown1_Script_Function_ASM_03"
// 
//PUSH
//ORG $39E1E 
//SHORT 0x2C01 // try AI1 1 time instead of 255 times 
//POP 
// fallback AI1 at 5A812C is " BYTE 05 64 FF 00; WORD 0 0 0" 
// same as #define ActionInRange "BYTE 0x05 0x64 0xFF 0x00; WORD 0x00000000; WORD 0x00000000; WORD 0x00000000" //Attacks in range

#define DoNothingAI DoNothing 
#define DoNothingBoss [21, 21, 0, 32] 

#define SafeZoneAI2 23 
#define BushAI [21,21, 4, 32] // will not use vulns or have staves used on them
#define WithinTwoZoningAI [23,23] // 
#define SafeZoningAI [23,32]
#define LessSafeZoningAI [24,24]
#define ZoningAI [24,24]
#define BeedrillAI [31,25] // summons stuff 
#define AttackOrWaitAI [0,26] // If nobody in range, wait 
#define WaitAI [26,3] // Wait. Do nothing else. 
#define RunAwayAI [6,27]
#define ApproachEnemySummonAI [28,0,0,0] 
#define RunAwayAndSummonAI [29,27] 
#define SummonOrAttackInRangeAI [30,30] 
#define SummonOrAttackIfAdjacentAI [30,30,0,32]
#define TrainerAI [31, 3, 0, 0] 
#define TrainerAI_chai (0x3<<8 | 31)

#define TrainerBossAI [31, 3, 0, 32] 
#define TrainerFleeAI [33, 3, 0, 0] 
#define AttackIfWithin2 [0, 6] 
#define GuidePlayerAI [34, 34, 0, 0]


ALIGN 4 
TrainerAIListToDoAI2:
BYTE 25 0 // Do AI2 for beedrill AI 


ALIGN 32
MoveTowardsCommanderAILabel:
Routine_AI(MoveTowardsCommanderAIFunc, 0)
ChangeAI(24, 0xFF) // Attack if in range 
Goto(0)
ALIGN 32

ALIGN 32
TrainerFleeSummonTeamAILabel:
Routine_AI(TrainerFleeSummonTeamAIFunc, 0)
Goto(0)
ALIGN 32


ALIGN 32
TrainerSummonTeamAILabel:
Routine_AI(TrainerSummonTeamAIFunc, 0)
Goto(0)
ALIGN 32


ALIGN 32 
PursueAndSummonOrAttackLabel:
Routine_AI(PursueAndSummonOrAttackFunc, 0)
Goto(0)
ALIGN 32 

ALIGN 32
RunAwayAndSummonLabel:
Routine_AI(RunAwayAndSummonFunc, 0)
Goto(0)
ALIGN 32 

ALIGN 32 
SummonOrAttackInRangeLabel:
Routine_AI(SummonOrAttackInRangeFunc, 0)
Goto(0)
ALIGN 32


ALIGN 32
MakeAIWaitLabel:
Routine_AI(MakeAIWait, 0)
Goto(0)
ALIGN 32 


RunAwayLabel:
RunAway 
Goto(0)
ALIGN 32 

PUSH 
ORG $5A9184 // so default fallback does not attack trainers ? (untested) 
POIN AttackInRangeExceptF0toFF
POP 

ALIGN 32
AttackInRangeExceptF0toFF:
ActionInRangeExcept(DoNotAttackTheseUnits)
Goto(0)

ALIGN 32
GuidePlayerAILabel:
Routine_AI(GuidePlayerAIFunc, 0)
//BYTE 0x03 0x00 0xFF 0; WORD 0x00000000; WORD 0x00000000; WORD 0x00000000 // Goto(0)
Goto_End(0)




// 803c5dc 
// 0x30017D0 has some pointer to the current AI 
// the first byte of ai1 is expected to be < 0x1C fsr 
// 0x30017cc determines whether to use ai1 or ai2? 
// fallback ai1 is 0x85a812c 

#define DoNotAttackUnitEntry(unitID) "ORG DoNotAttackTheseUnits+(unitID*2); SHORT 1" 

ALIGN 32
DoNotAttackTheseUnits:
FILL(256*2) 

PUSH 
DoNotAttackUnitEntry(ProtagID)
DoNotAttackUnitEntry(0xE0) // Unit IDs to not move towards / target 
DoNotAttackUnitEntry(0xE1)
DoNotAttackUnitEntry(0xE2)
DoNotAttackUnitEntry(0xE3)
DoNotAttackUnitEntry(0xE4)
DoNotAttackUnitEntry(0xE5)
DoNotAttackUnitEntry(0xE6)
DoNotAttackUnitEntry(0xE7)
DoNotAttackUnitEntry(0xE8)
DoNotAttackUnitEntry(0xE9)
DoNotAttackUnitEntry(0xEA)
DoNotAttackUnitEntry(0xEB)
DoNotAttackUnitEntry(0xEC)
DoNotAttackUnitEntry(0xED)
DoNotAttackUnitEntry(0xEE)
DoNotAttackUnitEntry(0xEF)
DoNotAttackUnitEntry(0xF0) // Unit IDs to not move towards / target 
DoNotAttackUnitEntry(0xF1)
DoNotAttackUnitEntry(0xF2)
DoNotAttackUnitEntry(0xF3)
DoNotAttackUnitEntry(0xF4)
DoNotAttackUnitEntry(0xF5)
DoNotAttackUnitEntry(0xF6)
DoNotAttackUnitEntry(0xF7)
DoNotAttackUnitEntry(0xF8)
DoNotAttackUnitEntry(0xF9)
DoNotAttackUnitEntry(0xFA)
DoNotAttackUnitEntry(0xFB)
DoNotAttackUnitEntry(0xFC)
DoNotAttackUnitEntry(0xFD)
POP 
ORG DoNotAttackTheseUnits + (256*2) 

ALIGN 32
MoveTowardsE0Label:
MoveTowardsIfOutOfRange(0xE0)
Goto(0)

ALIGN 32
MoveTowardsEnemy_AI2:
MoveTowardsOpponentsExcept(DoNotApproachTheseUnits)
Goto(0)

ALIGN 32
Safest_Zoning_AI2:
SafestMoveTowardsOpponentsExcept(DoNotApproachTheseUnits)
Goto(0)

ALIGN 32
Less_Safe_Zoning_AI2:
LessSafeMoveTowardsOpponentsExcept(DoNotApproachTheseUnits)
Goto(0)

ALIGN 32
AttackIfEnemyInRange:
ActionInRangeExcept(DoNotAttackTheseUnits)
Goto(0)

ALIGN 32
DoNothing1TurnAI1:
RunAway
ChangeAI(24, 0xFF) // Attack if in range 
Goto(0) 


ALIGN 32
DoNothingAI1: 
Nop_2
Goto(0)

// This has a whole bunch of Nops so that AI_2_Counter will increment 
ALIGN 32
DoNothingAI2:
Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop ; Nop 
Goto(0)

// New entries 

#define MoveToCoordRoutine 0x0803F9A9
#define WithinTwoActionsRoutine 0x0803F019 

// Curly brackets { } keep Locat_X as defined only within the brackets 
ALIGN 32
BeedrilAI_2:
{ ; Routine_AI(MoveToCoordRoutine, Locat_1) 
	Routine_AI(MoveToCoordRoutine, Locat_2) 
	Routine_AI(MoveToCoordRoutine, Locat_3) 
	Routine_AI(MoveToCoordRoutine, Locat_4) 
	Routine_AI(MoveToCoordRoutine, Locat_5) 
	Routine_AI(MoveToCoordRoutine, Locat_6) 

Goto(0)

ALIGN 32; Locat_1: 
defLocation(18,11)
ALIGN 32; Locat_2: 
defLocation(15,15) 
ALIGN 32; Locat_3: 
defLocation(16,21)
ALIGN 32; Locat_4: 
defLocation(23,21) 
ALIGN 32; Locat_5: 
defLocation(25,17)
ALIGN 32; Locat_6: 
defLocation(25,11) ; }





ALIGN 32
Within_2_Safest_Zoning_AI2:
{ ; Routine_AI(WithinTwoActionsRoutine, DoNotApproachTheseUnits) 
GotoIfLT(1)
Nop 
Goto(0)
Label(1)
ChangeAI(0xFF, SafeZoneAI2)
Goto(1)
ALIGN 32 
}

#define DoNotApproachUnitEntry(unitID) "ORG DoNotApproachTheseUnits+(unitID*2); SHORT 1" 

ALIGN 32
DoNotApproachTheseUnits:
FILL(256*2) 

PUSH 
DoNotApproachUnitEntry(ProtagID)
DoNotApproachUnitEntry(0xE0) // Unit IDs to not move towards / target 
DoNotApproachUnitEntry(0xE1)
DoNotApproachUnitEntry(0xE2)
DoNotApproachUnitEntry(0xE3)
DoNotApproachUnitEntry(0xE4)
DoNotApproachUnitEntry(0xE5)
DoNotApproachUnitEntry(0xE6)
DoNotApproachUnitEntry(0xE7)
DoNotApproachUnitEntry(0xE8)
DoNotApproachUnitEntry(0xE9)
DoNotApproachUnitEntry(0xEA)
DoNotApproachUnitEntry(0xEB)
DoNotApproachUnitEntry(0xEC)
DoNotApproachUnitEntry(0xED)
DoNotApproachUnitEntry(0xEE)
DoNotApproachUnitEntry(0xEF)
DoNotApproachUnitEntry(0xF0) // Unit IDs to not move towards / target 
DoNotApproachUnitEntry(0xF1)
DoNotApproachUnitEntry(0xF2)
DoNotApproachUnitEntry(0xF3)
DoNotApproachUnitEntry(0xF4)
DoNotApproachUnitEntry(0xF5)
DoNotApproachUnitEntry(0xF6)
DoNotApproachUnitEntry(0xF7)
DoNotApproachUnitEntry(0xF8)
DoNotApproachUnitEntry(0xF9)
DoNotApproachUnitEntry(0xFA)
DoNotApproachUnitEntry(0xFB)
DoNotApproachUnitEntry(0xFC)
DoNotApproachUnitEntry(0xFD)
POP 
ORG DoNotApproachTheseUnits + (256*2) 
ALIGN 32 

#endif 
